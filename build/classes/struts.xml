<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>

	<!-- 设置浏览器是否缓存静态内容,默认值为true(生产环境下使用),开发阶段最好关闭 -->
	<constant name="struts.serve.static.browserCache" value="false" />
	<!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开 -->
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- 开发模式下使用,这样可以打印出更详细的错误信息 -->
	<constant name="struts.devMode" value="true" />
	<!-- 指定允许上传的文件最大字节数。默认值是2097152(2M) -->
	<constant name="struts.multipart.maxSize" value="5242880" />
	<!-- 设置上传文件的临时文件夹,默认使用javax.servlet.context.tempdir -->
	<constant name="struts.multipart.saveDir " value="d:/temp" />

	<constant name="struts.objectFactory" value="spring"></constant>
	<constant name="struts.i18n.encoding" value="UTF-8"></constant>

	<package name="user" namespace="/front/user" extends="struts-default">
		<action name="login" method="login" class="com.bs.action.UserAction">
			<result name="success" type="redirect">/index </result>
			<result name="error">/front/login.jsp</result>
		</action>
		<action name="register" method="register" class="com.bs.action.UserAction">
			<result name="success">/front/sendEmail.jsp </result>
			<result name="input">/front/register.jsp</result>
		</action>
		<action name="sendEmail" method="sendEmail" class="com.bs.action.UserAction">
			<result name="success">/front/sendEmail.jsp </result>
			<result name="error">/front/sendEmail.jsp</result>
		</action>
		<action name="checkUrl" method="checkUrl" class="com.bs.action.UserAction">
			<result name="success">/front/sendEmail.jsp </result>
			<result name="error">/front/sendEmail.jsp</result>
		</action>
		<action name="alterMessage" method="alterMessage" class="com.bs.action.UserAction">
			<result name="success" type="redirect">/front/user/userInfo</result>
			<result name="input" type="redirect">/front/user/userInfo</result>
		</action>
		<action name="changeCode" method="changeCode" class="com.bs.action.UserAction">
			<result name="success" type="stream">
				<param name="contentType">image/jpeg</param>
				<param name="inputName">byteArrayInputStream</param>
			</result>
		</action>
		<action name="userInfo" method="userInfo" class="com.bs.action.UserAction">
			<result name="success">/front/user-info.jsp</result>
			<result name="error">/front/login.jsp</result>
		</action>
		<action name="exit" method="exit" class="com.bs.action.UserAction">
			<result name="success" type="redirect">/index </result>
		</action>
	</package>
	<package name="userback" namespace="/back/user" extends="json-default">
		<action name="getUsers" method="getUsers" class="com.bs.action.UserAction">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<!-- <param name="root">user</param> -->
				<!-- 指定是否序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 -->
				<param name="includeProperties">^user\[\d+\]\.userId,^user\[\d+\]\.username,^user\[\d+\]\.name,^user\[\d+\]\.sex,^user\[\d+\]\.email,^user\[\d+\]\.checkEmail,^user\[\d+\]\.phone,^user\[\d+\]\.icon,^user\[\d+\]\.address,^user\[\d+\]\.noLogin</param>
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!--<param name="excludeProperties">session,userService,^user\[\d+\]\.deliveryAddress,^user\[\d+\]\.shoppingCart,^user\[\d+\]\.bookCollection,^user\[\d+\]\.order,^user\[\d+\]\.appraise</param> -->
			</result>
		</action>
		<action name="alterUser" method="alterUser" class="com.bs.action.UserAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="loginAdmin" method="loginAdmin" class="com.bs.action.UserAction">
			<result name="success" type="redirect">/backIndex</result>
			<result name="error">/back/login.jsp</result>
		</action>
		<action name="noLogin" method="noLogin" class="com.bs.action.UserAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
	</package>
	<package name="deliveryAddress" namespace="/front/deliveryAddress"
		extends="json-default">
		<action name="add" method="add" class="com.bs.action.DeliveryAddressAction">
			<result name="success" type="redirect">/front/user/userInfo</result>
			<result name="input" type="redirect">/front/user/userInfo</result>
		</action>
		<action name="delete" method="delete"
			class="com.bs.action.DeliveryAddressAction">
			<result name="success" type="redirect">/front/user/userInfo</result>
		</action>
		<action name="alter" method="alter"
			class="com.bs.action.DeliveryAddressAction">
			<result name="success" type="redirect">/front/user/userInfo</result>
		</action>
		<action name="allAddress" method="allAddress" class="com.bs.action.DeliveryAddressAction">
			<result type="json">
				<param name="root">action</param>
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">^deliveryAddresses\[\d+\]\.addressId,^deliveryAddresses\[\d+\]\.userId,^deliveryAddresses\[\d+\]\.deliveryPerson,^deliveryAddresses\[\d+\]\.address,^deliveryAddresses\[\d+\]\.postcode,^deliveryAddresses\[\d+\]\.phone,^deliveryAddresses\[\d+\]\.defaultAddress</param>
			</result>
		</action>
	</package>

	<package name="shoppingCart" namespace="/front/shoppingCart"
		extends="struts-default">
		<action name="shoppingCarts" method="shoppingCarts"
			class="com.bs.action.ShoppingCartAction">
			<result name="success">/front/user-cart.jsp</result>
		</action>
		<action name="buy" method="buy" class="com.bs.action.ShoppingCartAction">
			<result name="success" type="redirect">/front/shoppingCart/shoppingCarts
			</result>
		</action>
		<action name="delete" method="delete" class="com.bs.action.ShoppingCartAction">
			<result name="success" type="redirect">/front/shoppingCart/shoppingCarts
			</result>
		</action>
		<action name="deleteAll" method="deleteAll"
			class="com.bs.action.ShoppingCartAction">
			<result name="success" type="redirect">/front/shoppingCart/shoppingCarts
			</result>
		</action>
	</package>


	<package name="index" namespace="/" extends="struts-default">
		<action name="index" method="getIndex" class="com.bs.action.IndexAction">
			<result name="success">/front/index.jsp</result>
		</action>
		<action name="backIndex" method="backIndex" class="com.bs.action.IndexAction">
			<result name="success">/WEB-INF/index.jsp</result>
			<result name="error">/back/login.jsp</result>
		</action>
	</package>

	<package name="bookBack" namespace="/back/book" extends="json-default">
		<action name="getAllBook" method="getAllBook" class="com.bs.action.BookAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">total,^books\[\d+\]\.bookId,^books\[\d+\]\.bookName,^books\[\d+\]\.author,^books\[\d+\]\.publisher,^books\[\d+\]\.publishDate,^books\[\d+\]\.ISBN,^books\[\d+\]\.fixedPrice,^books\[\d+\]\.currentPrice,^books\[\d+\]\.contentSummary,^books\[\d+\]\.image,^books\[\d+\]\.category\.oneCategory,^books\[\d+\]\.category\.categoryId,^books\[\d+\]\.collectionNumber</param>
			</result>
		</action>
		<action name="alterBook" method="alterBook" class="com.bs.action.BookAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="addBook" method="addBook" class="com.bs.action.BookAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="deleteBook" method="deleteBook" class="com.bs.action.BookAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="uploadImage" method="uploadImage" class="com.bs.action.BookAction">
			<result type="json">
				<param name="root">status</param>
			</result>
			<interceptor-ref name="fileUpload">
				<!-- 文件过滤 -->
				<param name="allowedTypes">image/bmp,image/png,image/gif,image/jpeg</param>
				<!-- 文件大小, 以字节为单位 -->
				<param name="maximumSize">5242880</param>
			</interceptor-ref>
			<!-- 默认拦截器必须放在fileUpload之后，否则无效 -->
			<interceptor-ref name="defaultStack" />
		</action>
		<action name="deleteImage" method="deleteImage" class="com.bs.action.BookAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="search" method="search" class="com.bs.action.BookAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">total,^books\[\d+\]\.bookId,^books\[\d+\]\.bookName,^books\[\d+\]\.author,^books\[\d+\]\.publisher,^books\[\d+\]\.publishDate,^books\[\d+\]\.ISBN,^books\[\d+\]\.fixedPrice,^books\[\d+\]\.currentPrice,^books\[\d+\]\.contentSummary,^books\[\d+\]\.image,^books\[\d+\]\.category\.oneCategory,^books\[\d+\]\.category\.categoryId,^books\[\d+\]\.collectionNumber</param>
			</result>
		</action>
	</package>
	<package name="book" namespace="/front/book" extends="struts-default">
		<action name="find" method="find" class="com.bs.action.BookAction">
			<result name="success">/front/goods.jsp</result>
		</action>
		<action name="findCategoryBook" method="findCategoryBook"
			class="com.bs.action.BookAction">
			<result name="success">/front/category.jsp</result>
		</action>
		<action name="searchBook" method="searchBook" class="com.bs.action.BookAction">
			<result name="success">/front/search.jsp</result>
		</action>
		<action name="sortBySearch" method="sortBySearch" class="com.bs.action.BookAction">
			<result name="success">/front/search.jsp</result>
		</action>
	</package>

	<package name="bookCategoryBack" namespace="/back/bookCategory"
		extends="json-default">
		<action name="getCategory" method="getCategory"
			class="com.bs.action.BookCategoryAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">^bookCategory\[\d+\]\.categoryId,^bookCategory\[\d+\]\.oneCategory,^bookCategory\[\d+\]\.bookNumber</param>
			</result>
		</action>
		<action name="addCategory" method="addCategory"
			class="com.bs.action.BookCategoryAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="alterCategory" method="alterCategory"
			class="com.bs.action.BookCategoryAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="deleteCategory" method="deleteCategory"
			class="com.bs.action.BookCategoryAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
	</package>

	<package name="bookSalesBack" namespace="/back/bookSales"
		extends="json-default">
		<action name="getAllSales" method="getAllSales"
			class="com.bs.action.BookSalesAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">total,^bookSales\[\d+\]\.bookId,^bookSales\[\d+\]\.soldNumber,^bookSales\[\d+\]\.nowNumber,^bookSales\[\d+\]\.salesTime,^bookSales\[\d+\]\.book\.bookName</param>
			</result>
		</action>
		<action name="alterNumber" method="alterNumber"
			class="com.bs.action.BookSalesAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="search" method="search" class="com.bs.action.BookSalesAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">total,^bookSales\[\d+\]\.bookId,^bookSales\[\d+\]\.soldNumber,^bookSales\[\d+\]\.nowNumber,^bookSales\[\d+\]\.salesTime,^bookSales\[\d+\]\.book\.bookName</param>
			</result>
		</action>

	</package>

	<package name="orderBack" namespace="/back/order" extends="json-default">
		<action name="getAllOrder" method="getAllOrder" class="com.bs.action.OrderAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">total,^order\[\d+\]\.orderId,^order\[\d+\]\.userId,^order\[\d+\]\.deliveryAddress\.address,^order\[\d+\]\.deliveryAddress\.deliveryPerson,^order\[\d+\]\.deliveryAddress\.postcode,^order\[\d+\]\.deliveryAddress\.phone,^order\[\d+\]\.totalprice,^order\[\d+\]\.userId,^order\[\d+\]\.orderDate,^order\[\d+\]\.ispayed,^order\[\d+\]\.paymode,^order\[\d+\]\.user\.username</param>
			</result>
		</action>
		<action name="alterNumber" method="alterNumber" class="com.bs.action.OrderAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="search" method="search" class="com.bs.action.OrderAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">total,^order\[\d+\]\.orderId,^order\[\d+\]\.userId,^order\[\d+\]\.deliveryAddress\.address,^order\[\d+\]\.deliveryAddress\.deliveryPerson,^order\[\d+\]\.deliveryAddress\.postcode,^order\[\d+\]\.deliveryAddress\.phone,^order\[\d+\]\.totalprice,^order\[\d+\]\.userId,^order\[\d+\]\.orderDate,^order\[\d+\]\.ispayed,^order\[\d+\]\.paymode,^order\[\d+\]\.user\.username</param>
			</result>
		</action>
		<action name="getBooksByOrderId" method="getBooksByOrderId"
			class="com.bs.action.OrderAction">
			<result type="json">
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">^books\[\d+\]\.bookId,^books\[\d+\]\.bookName,^books\[\d+\]\.author,^books\[\d+\]\.publisher,^books\[\d+\]\.ISBN,^books\[\d+\]\.currentPrice,^books\[\d+\]\.number</param>
			</result>
		</action>
		<action name="alterOrder" method="alterOrder" class="com.bs.action.OrderAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
		<action name="delete" method="delete" class="com.bs.action.OrderAction">
			<result type="json">
				<param name="root">status</param>
			</result>
		</action>
	</package>
	<package name="order" namespace="/front/order" extends="struts-default">
		<action name="userOrders" method="userOrders" class="com.bs.action.OrderAction">
			<result name="success">/front/order.jsp</result>
			<result name="error">/front/login.jsp</result>
		</action>
		<action name="pay" method="pay" class="com.bs.action.OrderAction">
			<result name="success" type="redirect">/front/order/userOrders</result>
		</action>
		<action name="delete" method="delete" class="com.bs.action.OrderAction">
			<result name="success" type="redirect">/front/order/userOrders</result>
		</action>
		<action name="submitOrder" method="submitOrder" class="com.bs.action.OrderAction">
			<result name="success" type="redirect">/front/order/userOrders</result>
			<result name="error" type="redirect">/front/shoppingCart/shoppingCarts</result>
		</action>
	</package>
	<package name="appraise" namespace="/front/appraise" extends="struts-default">
		<action name="appraise" method="appraise" class="com.bs.action.AppraiseAction">
			<result name="success" type="redirect">/front/order/userOrders</result>
		</action>
	</package>
	<package name="appraiseBack" namespace="/back/appraise"
		extends="json-default">
		<action name="allAppraise" method="allAppraise"
			class="com.bs.action.AppraiseAction">
			<result type="json">
				<param name="root">action</param>
				<param name="excludeNullProperties">true</param>
				<param name="includeProperties">total,^appraises\[\d+\]\.orderId,^appraises\[\d+\]\.bookId,^appraises\[\d+\]\.starLevel,^appraises\[\d+\]\.appraiseGrade,^appraises\[\d+\]\.appraiseContent,^appraises\[\d+\]\.mallAnswer,^appraises\[\d+\]\.appraiseTime,^appraises\[\d+\]\.user\.userId,^appraises\[\d+\]\.user\.username,^appraises\[\d+\]\.book\.bookName</param>
			</result>
		</action>
	</package>

</struts>
